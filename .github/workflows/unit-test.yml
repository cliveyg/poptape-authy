name: Run unit tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 10 * * 1' # run "At 10:00 on Monday"

jobs:
  # Run code tests before building the image, to ensure it is good to go
  unit-tests:
    name: Run code tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9] # Using a list so it's extensible for future use
    services:
      # label used to access the service container
      postgres:
        # dockerhub image
        image: postgres
        # provide the login and db deets for postgres
        env:
          POSTGRES_DB: poptape_auth_test
          POSTGRES_PASSWORD: ${{ secrets.TESTDB_PASSWORD }}
          POSTGRES_USER: poptape_auth_test
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:

      - name: Install postgres client
        run: |
          sudo apt-get update && sudo apt-get install --yes --no-install-recommends postgresql-client

      - uses: actions/checkout@v4
      - name: Setting up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # have to create an .env file to be able to run unit tests
      - name: Create .env file from github secrets
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Create DB tables
        run: |
          pwd
          psql -h localhost -U poptape_auth_test password=${{ secrets.TESTDB_PASSWORD }} -f db_schema/poptape_auth_db_schema.sql
          psql -h localhost -U poptape_auth_test password=${{ secrets.TESTDB_PASSWORD }} -c '\dt'

      - name: Test with pytest
        run: |
          touch poptape_authy.log
          coverage run -m pytest -sv --cov=app app/tests

    deploy:
      name: Deploy code to server
      runs-on: ubuntu-latest

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Configure SSH
          uses: webfactory/ssh-agent@v0.9.0
          with:
            ssh-private-key: ${{ secrets.DO_GITHUB_USER_SSH_PRIVATE_KEY }}

        - name: Git Pull
          run: |
            cd ${{ github.workspace }}
            ssh-keyscan -t rsa ${{ secrets.SERVER_DOMAIN }} >> ~/.ssh/known_hosts
            ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_DOMAIN }} "cd ${{ secrets.DO_REPO_PATH }} && git pull origin main"
            echo "Successfully pulled repo."
